---
- name: Validate OpenStack Variables
  fail: msg="Required OpenStack Variables not defined!"
  when: 
  - image_name is not defined or security_groups is not defined or key_name is not defined or image_name is not defined or flavor_name is not defined 

- name: "Search for valid OpenStack Flavor"
  shell: "nova flavor-list | awk \"/{{flavor_name }}/\"'{print $2}'"
  register: flavor_query

- name: Validate OpenStack Image
  fail: msg="Unable to determine a unique OpenStack Image"
  when: flavor_query.stdout.split()|length  != 1

- name: Setting OpenStack Image ID Fact
  set_fact:
    flavor_id: "{{ flavor_query.stdout }}"

- name: "Initialize Neutron fact"
  set_fact:
    neutron_in_use: 'no'

- name: "Query Neutron services"
  command: neutron agent-list
  register: neutron
  ignore_errors: true

- name: "Check for Neutron services - a failure assumes Legacy Networking (Nova Network)"
  set_fact:
    neutron_in_use: 'yes'
  when: neutron.rc == 0

- include: security_groups.yml

- name: "Provision OpenStack {{ type }}"
  os_server:
    name: "{{ type }}{{ item }}.{{ full_dns_domain }}"
    state: present
    image: "{{ image_name }}"
    flavor: "{{ flavor_id }}"
    key_name: "{{ key_name }}"
    security_groups: "{{ security_groups_list }}"
    auto_ip: "{{ neutron_in_use }}"
    timeout: 200
  with_sequence: "start=1 end={{ node_count | default(1) }}"
  register: "openstack_create"

- add_host:
    hostname: "{{ item.openstack.name }}"
    ansible_ssh_host: "{{ item.openstack.public_v4 }}"
    dns_public_ip: "{{ item.openstack.public_v4 }}"
    dns_private_ip: "{{ item.openstack.private_v4 }}"
    ansible_ssh_user: root
    id: "{{ item.id }}"
    private_ip: "{{ item.openstack.private_v4 }}"
    groups: "{{ register_host_group }}"
  with_items: "{{ openstack_create.results }}"

- name: "Wait for {{ type }} to be available"
  wait_for: port=22 host={{ item.openstack.public_v4 }}
  with_items: "{{ openstack_create.results }}"

# Create Volumes
- include: create-volume.yml
  when: volume_size is defined and disk_volume is defined
  vars:
    instance_type: "{{ type }}"
    openstack_machines: "{{ openstack_create }}"
    storage_volume_size: "{{ volume_size }}"
    storage_disk_volume: "{{ disk_volume }}"
